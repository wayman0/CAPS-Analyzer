/***************************************************************************
 *   associationselectdlg.cpp                                                    *
 *   Copyright (C) 2014 by Daniel Suson                                    *
 *   suson@calumet.purdue.edu                                              *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU General Public License for more details.                          *
 *                                                                         *
 *   You should have received a copy of the GNU General Public License     *
 *   along with this program; if not, write to the                         *
 *   Free Software Foundation, Inc.,                                       *
 *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
 *                                                                         *
 *   In addition, as a special exception, the copyright holders give       *
 *   permission to link the code of this program with any edition of       *
 *   the Qt library by Trolltech AS, Norway (or with modified versions     *
 *   of Qt that use the same license as Qt), and distribute linked         *
 *   combinations including the two.  You must obey the GNU General        *
 *   Public License in all respects for all of the code used other than    *
 *   Qt.  If you modify this file, you may extend this exception to        *
 *   your version of the file, but you are not obligated to do so.  If     *
 *   you do not wish to do so, delete this exception statement from        *
 *   your version.                                                         *
 ***************************************************************************
 * Description:                                                            *
 *                                                                         *
 * This class defines the association select dialog structure associated with    *
 * the Qt4 user interface.                                                 *
 * ----------------------- Change Log ------------------------------------ *
 * Date    Name         Description                                        *
 *                                                                         *
 ***************************************************************************
 * This software evolved from work that was done by Eric Hivon at the      *
 * California Institute of Technology on the MASTER algorithm (Hivon, E.,  *
 * et al., ApJ, vol 567, p 2).  It adapts or interfaces with these         *
 * packages:                                                               *
 *                                                                         *
 * HealPix         (http://www.eso.org/science/healpix/)                   *
 * FTOOLS & FITSIO (http://heasarc.gsfc.nasa.gov/docs/corp/software.html)  *
 *                                                                         *
 * Any publications or presentations that use results generated by this    *
 * program must reference the fact that it was developed by Daniel Suson   *
 ***************************************************************************/
#include "../../libanalyzer/association.h"

#include <QtWidgets>

#include "associationselectdlg.h"
#include "ui_associationselectdlg.h"

associationSelectDialog::associationSelectDialog(std::vector<association*>* assocVector):ui(new Ui::associationSelectDialog)
{
  /* set up the user interface first */
  ui->setupUi(this);
  
  /* initialize internal variables*/
  dirty = false;
  
  dataMgrs = assocVector;
  currAssoc = (*dataMgrs)[0];

  for(int i = 0; i < dataMgrs->size(); i += 1)
    ui->assocSelectBox->addItem("Association: " + QString::number(i + 1));

  /* set up signals and slots */
  connect(ui->buttonBox, &QDialogButtonBox::accepted, this, &associationSelectDialog::finalize);
  connect(ui->buttonBox, &QDialogButtonBox::rejected, this, &associationSelectDialog::cancel);
}

associationSelectDialog::~associationSelectDialog() {
  delete ui;

  for(association* a : *dataMgrs)
    delete a;

  delete dataMgrs;
}

void associationSelectDialog::setCurrAssoc(association* assoc)
{
  currAssoc = assoc;
}


void associationSelectDialog::validate() {
  dirty = false; // assume nothing has changed
  
  association* oldAssoc = currAssoc;

  int index = ui->assocSelectBox->currentIndex();
  currAssoc = (*dataMgrs)[index];

  if(oldAssoc != currAssoc)
    dirty = true;

  return;
}

void associationSelectDialog::configure()
{
  ui->assocSelectBox->clear();

  dirty = false;

  for(int i = 0; i < dataMgrs->size(); i += 1)
  {
    ui->assocSelectBox->addItem("Association: " + QString::number(i + 1));
    if((*dataMgrs)[i] == currAssoc)
      ui->assocSelectBox->setCurrentIndex(i);
  }

  exec();
}

void associationSelectDialog::reset()
{
  dirty = false;

  ui->assocSelectBox->clear();
}

void associationSelectDialog::finalize() {
  validate();

  Q_EMIT associationSelected(currAssoc);

  accept();
}

void associationSelectDialog::cancel() {
  if (dirty)
    dirty = false;
  close();
}

void associationSelectDialog::help() {

}
